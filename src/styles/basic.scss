@import 'assets/vars.scss';
@import 'assets/mixins.scss';

// styles of size

@for $index from 1 through 20 {
  .w-#{$index * 5} {
    width: $index * 5%;
  }

  .h-#{$index * 5} {
    width: $index * 5%;
  }

  .flex-size-#{$index * 5} {
    flex-basis: $index * 5%;
  }

}

.w-100-mobile {

  @media screen and (max-width: $mobileResponse) {
    width: 100%;
  }

}

.h-100 {
  height: 100%;
}

.w-25px {
  width: 25px;
}

.h-25px {
  height: 25px;
}

@for $index from 1 through 20 {

  .w-#{$index * 50}px {
    width: $index * 50 + px;

    &.media {
      @media screen and (max-width: $index * 50px + 50px) {
        width: 100%;
      }
    }

  }

  .h-#{$index * 50}px {
    height: $index * 50 + px;
  }

  .max-w-#{$index * 50}px {
    max-width: $index * 50 + px;
  }

  .max-h-#{$index * 50}px {
    max-height: $index * 50 + px;
  }

  .min-w-#{$index * 50}px {
    min-width: $index * 50 + px;

    &.media {
      @media screen and (max-width: $index * 50px + 50px) {
        min-width: 100%;
      }
    }

  }

  .min-h-#{$index * 50}px {
    min-height: $index * 50 + px;
  }

  .flex-size-#{$index * 50}px {
    flex-basis: $index * 50 + px;

    &.media {
      @media screen and (max-width: $index * 50px + 50px) {
        flex-basis: 100%;
      }
    }

  }

}


// style of margin, paddings and gaps

@for $index from 1 through 10 {

  .ml-#{$index * 5}px {
    margin-left: $index * 5 + px;
  }

  .mr-#{$index * 5}px {
    margin-right: $index * 5 + px;
  }

  .mt-#{$index * 5}px {
    margin-top: $index * 5 + px;
  }

  .mb-#{$index * 5}px {
    margin-bottom: $index * 5 + px;
  }

  .pl-#{$index * 5}px {
    padding-left: $index * 5 + px;
  }

  .pr-#{$index * 5}px {
    padding-right: $index * 5 + px;
  }

  .pt-#{$index * 5}px {
    padding-top: $index * 5 + px;
  }

  .pb-#{$index * 5}px {
    padding-bottom: $index * 5 + px;
  }

  .gap-#{$index * 5}px {
    gap: $index * 5 + px;
  }

}

.ml-auto {
  margin-left: auto;
}

.mr-auto {
  margin-right: auto;
}

.mt-auto {
  margin-top: auto;
}

.mb-auto {
  margin-bottom: auto;
}


.center-x {
  margin-left: auto;
  margin-right: auto;
}

.center-y {
  margin-top: auto;
  margin-bottom: auto;
}


// flex styles

.flex {
  display: flex;
}

.flex-j-c {
  justify-content: center;
}

.flex-j-sb {
  justify-content: space-between;
}

.flex-j-fe {
  justify-content: flex-end;
}

.flex-j-fs {
  justify-content: flex-start;
}

.flex-a-c {
  align-items: center;
}

.flex-a-fe {
  align-items: flex-end;
}

.flex-a-fs {
  align-items: flex-start;
}

.flex-wrap {
  flex-wrap: wrap;

  &-mobile {
    @media screen and (max-width: $mobileResponse) {
      flex-wrap: wrap;
    }
  }

}


.flex-column {
  flex-direction: column;
}

@for $index from 0 to 2 {

  .flex-grow-#{$index} {
    flex-grow: $index;
  }

  .flex-shrink-#{$index} {
    flex-shrink: $index;
  }

}




// position styles

.relative {
  position: relative;
}

.pos-abs-center {
  @include absolutePosition(50%, 50%, -50%, -50%);
}


// statuses styles

$statuses: (success: $successColor, warning: $warningColor, error: $errorColor);

@each $status, $color in $statuses {

  .#{$status} {
    color: $color;
  }


    .#{$status}-input {
      input {
        border-color: $color;
      }
    }


  .#{$status}-background {
    background: var(--mainColor);
    background: radial-gradient(circle, var(--mainColor) 90%, $color 100%);
  }

}


// rest

.default-cursor {
  cursor: default;
}

.pointer-cursor {
  cursor: pointer;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.nowrap {
  white-space: nowrap;
}


.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}