@import "vars.scss";

@mixin vh100() {
  min-height: 100vh;
  min-height: calc(var(--vh, 1vh) * 100);
}


@mixin createGrid($initColumns, $gridArr) {

  display: grid;
  grid-template-columns: $initColumns;

  @each $media, $columns in $gridArr {
    @media screen and (max-width: $media) {
      grid-template-columns: $columns;
    }
  }

}


@mixin absolutePosition($left: 0, $top: 0, $transformX: 0, $transformY: 0) {
  position: absolute;
  left: $left;
  top: $top;
  @if($transformX != 0 OR $transformY != 0) {
    transform: translate($transformX, $transformY);
  }
}


@mixin imageContainer($object-fit: contain, $x: 50%, $y: 50%) {

  width: 100%;
  padding-top: 100%;
  position: relative;
  overflow: hidden;

  img {
    @if $x == 50% AND $y == 50% {

      @include absolutePosition($x, $y, -50%, -50%);

    } @else {

      @include absolutePosition($x, $y);

    }
    min-width: 100%;
    min-height: 100%;
    object-fit: $object-fit;
    text-align: center;
  }

}


@mixin highlighting($radius: 10px, $color: var(--highlightingColor)) {
  box-shadow: 0 0 $radius 1px $color;
  border: $borderSize solid $color;
}


@mixin scrollBar() {

  overflow: auto;
  @supports (overflow: overlay) {
    overflow: overlay;
  }
  @supports (scrollbar-width: thin) {
    scrollbar-width: thin;
    scrollbar-color: var(--secondMainColor) transparent;
  }

  &::-webkit-scrollbar {
    width: 5px;
  }

  &::-webkit-scrollbar-thumb {
    background: var(--secondMainColor);
    border-radius: 5px;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }
}